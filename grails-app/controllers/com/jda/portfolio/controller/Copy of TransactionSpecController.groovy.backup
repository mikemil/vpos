package com.jda.portfolio.controller

import com.jda.portfolio.domain.LineItemSpec
import com.jda.portfolio.domain.TenderSpec
import com.jda.portfolio.domain.TransactionSpec

class TransactionSpecController {
    
    def autoTransService

    def create = {
        //def transactionSpecInstance = new TransactionSpec()
        //transactionSpecInstance.properties = params
        //return ['transactionSpecInstance':transactionSpecInstance]
        return ['transactionSpecInstance': createSpec()]
    }

    def createLookup = {
        //def transactionSpecInstance = new TransactionSpec()
        //transactionSpecInstance.properties = params
        //return ['transactionSpecInstance':transactionSpecInstance]
        return ['transactionSpecInstance': createSpec()]
    }
    
    //def TransactionSpec createSpec = {
    def createSpec = {
        def transactionSpecInstance = new TransactionSpec()
        transactionSpecInstance.properties = params
        return ['transactionSpecInstance':transactionSpecInstance]   
    }
    
    def txncreate = {
        def transactionSpecInstance = bindTxnSpec(params)
        params.XMLRequest  = autoTransService.getXML(transactionSpecInstance)
        params.XMLResponse = autoTransService.txnCreate(transactionSpecInstance, params.userid, params.pswd)
        render (view:"show", model:params)
    }

    def txncreateAjax = {
            def transactionSpecInstance = bindTxnSpec(params)
            params.XMLRequest  = autoTransService.getXML(transactionSpecInstance)
            render (view:"showAjax", model:params)
    }
    
    def callTxnCreate = {
            println "callTxnCreate called..."
            def XMLRequest = params.XMLRequest
            def XMLReponse = "result should be here!!!"
            render (view:"showAjax", model:params)
    }
    
    def pricelookup = {
        def transactionSpecInstance = bindTxnSpec(params)
        params.XMLRequest  = autoTransService.getXML(transactionSpecInstance)
        //params.XMLResponse = autoTransService.pricelookup(transactionSpecInstance)
        render (view:"show", model:params)
    }
    
    // common method to bind and return the txn spec
    def TransactionSpec bindTxnSpec(params)  {
        def transactionSpecInstance = new TransactionSpec()
        
        def count = params.tenderCount.toInteger()
        for (int i=0; i<count; i++) {
            def tender = new TenderSpec()
            bindData(tender, params["tenderSpecs["+i+"]"])
            transactionSpecInstance.tenderSpecs[i] = tender
        }
        
        count = params.itemCount.toInteger()
        for (int i=0; i< count; i++) {
            def lineItem = new LineItemSpec()
            bindData(lineItem, params["lineItemSpecs["+i+"]"])
            transactionSpecInstance.lineItemSpecs[i] = lineItem
        }
        
        transactionSpecInstance.properties = params  
        return transactionSpecInstance
    }
    
}
